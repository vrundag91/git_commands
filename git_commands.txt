Git Commands 

# Authorization 

1. git config --global user.name Vrunda
2. git config --global user.email vrunda.g@ahduni.edu.in

# Check the Authentication

3. git config --global user.name
4. git config --global user.email
 
# Opening the editor 

5. code . [Opening the VS code]
6. start notepad++ [Opening the notepad++]

# Initializing the Git Repository

7. git init [This will initialize the repository in the current folder and create .git hiddne folder]

# Checking the files (-ls group commands)

8. ls -lart [This shows the hidden files and other files from the directory]

# Checking your files status and saving/managing files

9. git status [show the status of the file -- untracked -- unmodified -- modified -- staged]
9.1 git status -s [show the status in shot representation - the first position shows staged status and second position shows working tree status]
10. git add filename [This will send the file in staged status]
10.1 git add . [Adding all files togather]
10.2 git add -A [Adding all files togather]
11. git commit [This will save the file in repository -- only git commit will open the VI editor to write the commit message]
12. git commit -m type your message [This will save the file with the given message]
12.1 git commit -a -m type your message [this will directly commit the file without adding]

# Creating a new file 

13. touch filename [This will create new file in the current folder]

# Clearing the terminal 

14. Clear

# Recovering the modified file befor commit 

15. git checkout filename [recovering specific file]
16. git checkout -f [recovering all the files togather from the folder]

# checking Logs in git

17. git log [list of all the commits]
18. PRESS q [to exit git log]
19. git log -p -5 [list of last 5 commits]

# Checking the difference in the files

20. git diff [shows the difference like -- file befor and --file after]
21. git diff --staged [compare file with thast staged file]

# Removing the files

21. git rm filename [delete the file from the current directory]
22. git rm --cached [delete the file only from staged status]

# Ignoring the File 

23. touch .gitignore [Creating the ignore file]


 
